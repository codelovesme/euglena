declare const _default: import("@euglena/core").OrganelleModule<import("@euglena/core").P<undefined, {
    organelleName: string;
}>, import("@euglena/core").InsertSapIntoParticles<{
    incoming: {
        Get: import("@euglena/core").P<{
            url: string;
            headers?: {
                "A-IM"?: string | undefined;
                Accept?: string | undefined;
                "Accept-Charset"?: string | undefined;
                "Accept-Encoding"?: string | undefined;
                "Accept-Language"?: string | undefined;
                "Accept-Datetime"?: string | undefined;
                "Access-Control-Request-Method"?: string | undefined;
                "Access-Control-Request-Headers"?: string | undefined;
                Authorization?: string | undefined;
                "Cache-Control"?: string | undefined;
                Connection?: string | undefined;
                "Content-Length"?: string | undefined;
                "Content-Type"?: string | undefined;
                Cookie?: string | undefined;
                Date?: string | undefined;
                Expect?: string | undefined;
                Forwarded?: string | undefined;
                From?: string | undefined;
                Host?: string | undefined;
                "If-Match"?: string | undefined;
                "If-Modified-Since"?: string | undefined;
                "If-None-Match"?: string | undefined;
                "If-Range"?: string | undefined;
                "If-Unmodified-Since"?: string | undefined;
                "Max-Forwards"?: string | undefined;
                Origin?: string | undefined;
                Pragma?: string | undefined;
                "Proxy-Authorization"?: string | undefined;
                Range?: string | undefined;
                Referer?: string | undefined;
                TE?: string | undefined;
                "User-Agent"?: string | undefined;
                Upgrade?: string | undefined;
                Via?: string | undefined;
                Warning?: string | undefined;
            } | undefined;
        }, {}>;
        Post: import("@euglena/core").P<{
            url: string;
            headers?: {
                "A-IM"?: string | undefined;
                Accept?: string | undefined;
                "Accept-Charset"?: string | undefined;
                "Accept-Encoding"?: string | undefined;
                "Accept-Language"?: string | undefined;
                "Accept-Datetime"?: string | undefined;
                "Access-Control-Request-Method"?: string | undefined;
                "Access-Control-Request-Headers"?: string | undefined;
                Authorization?: string | undefined;
                "Cache-Control"?: string | undefined;
                Connection?: string | undefined;
                "Content-Length"?: string | undefined;
                "Content-Type"?: string | undefined;
                Cookie?: string | undefined;
                Date?: string | undefined;
                Expect?: string | undefined;
                Forwarded?: string | undefined;
                From?: string | undefined;
                Host?: string | undefined;
                "If-Match"?: string | undefined;
                "If-Modified-Since"?: string | undefined;
                "If-None-Match"?: string | undefined;
                "If-Range"?: string | undefined;
                "If-Unmodified-Since"?: string | undefined;
                "Max-Forwards"?: string | undefined;
                Origin?: string | undefined;
                Pragma?: string | undefined;
                "Proxy-Authorization"?: string | undefined;
                Range?: string | undefined;
                Referer?: string | undefined;
                TE?: string | undefined;
                "User-Agent"?: string | undefined;
                Upgrade?: string | undefined;
                Via?: string | undefined;
                Warning?: string | undefined;
            } | undefined;
            body: any;
        }, {}>;
        Delete: import("@euglena/core").P<{
            url: string;
            headers?: {
                "A-IM"?: string | undefined;
                Accept?: string | undefined;
                "Accept-Charset"?: string | undefined;
                "Accept-Encoding"?: string | undefined;
                "Accept-Language"?: string | undefined;
                "Accept-Datetime"?: string | undefined;
                "Access-Control-Request-Method"?: string | undefined;
                "Access-Control-Request-Headers"?: string | undefined;
                Authorization?: string | undefined;
                "Cache-Control"?: string | undefined;
                Connection?: string | undefined;
                "Content-Length"?: string | undefined;
                "Content-Type"?: string | undefined;
                Cookie?: string | undefined;
                Date?: string | undefined;
                Expect?: string | undefined;
                Forwarded?: string | undefined;
                From?: string | undefined;
                Host?: string | undefined;
                "If-Match"?: string | undefined;
                "If-Modified-Since"?: string | undefined;
                "If-None-Match"?: string | undefined;
                "If-Range"?: string | undefined;
                "If-Unmodified-Since"?: string | undefined;
                "Max-Forwards"?: string | undefined;
                Origin?: string | undefined;
                Pragma?: string | undefined;
                "Proxy-Authorization"?: string | undefined;
                Range?: string | undefined;
                Referer?: string | undefined;
                TE?: string | undefined;
                "User-Agent"?: string | undefined;
                Upgrade?: string | undefined;
                Via?: string | undefined;
                Warning?: string | undefined;
            } | undefined;
        }, {}>;
    };
    outgoing: {
        ACK: import("@euglena/core").P<undefined, {}>;
        Exception: import("@euglena/core").P<import("cessnalib").sys.type.Exception, {}>;
        Log: import("@euglena/core").P<{
            message: string;
            level: "Warning" | "Error" | "Info";
        }, {}>;
        Response: import("@euglena/core").P<{
            headers: {
                "A-IM"?: string | undefined;
                Accept?: string | undefined;
                "Accept-Charset"?: string | undefined;
                "Accept-Encoding"?: string | undefined;
                "Accept-Language"?: string | undefined;
                "Accept-Datetime"?: string | undefined;
                "Access-Control-Request-Method"?: string | undefined;
                "Access-Control-Request-Headers"?: string | undefined;
                Authorization?: string | undefined;
                "Cache-Control"?: string | undefined;
                Connection?: string | undefined;
                "Content-Length"?: string | undefined;
                "Content-Type"?: string | undefined;
                Cookie?: string | undefined;
                Date?: string | undefined;
                Expect?: string | undefined;
                Forwarded?: string | undefined;
                From?: string | undefined;
                Host?: string | undefined;
                "If-Match"?: string | undefined;
                "If-Modified-Since"?: string | undefined;
                "If-None-Match"?: string | undefined;
                "If-Range"?: string | undefined;
                "If-Unmodified-Since"?: string | undefined;
                "Max-Forwards"?: string | undefined;
                Origin?: string | undefined;
                Pragma?: string | undefined;
                "Proxy-Authorization"?: string | undefined;
                Range?: string | undefined;
                Referer?: string | undefined;
                TE?: string | undefined;
                "User-Agent"?: string | undefined;
                Upgrade?: string | undefined;
                Via?: string | undefined;
                Warning?: string | undefined;
            };
            body: any;
            status: number;
        }, {}>;
    };
}, import("@euglena/core").P<undefined, {
    organelleName: string;
}>>>;
export default _default;
